# ENV setup
>cmd ma new project folder name
> virtualenv -p path venv
>source venv/bin/activate (for mac/linux)
    venv\Scripts\activate (for WINs)
> (venv) E:\.. > pip install django
>pip freeze > requirements.txt

#Django works in MVT( model, view and Template format)
client request at view and performs operation at model(DB) and responce and gives result at Templete

#Django Command
>django-admin (help)
>django-admin startproject Blog_project . (if . skipped, it just make fodler, dot with manage.py is made)
>dir Blog_project
    __init__.py, settings.py, urls.py, wsgi.py

    __init__.py:  its just make the package
    wsgi.py : treat like servers to interact
    urls.py : url ko direction,loc
    setting.py : imp part,
        BASE_DIR : return the base dir
        SECRET_KEY : for confidential value , encryption(50 length ko)
        DEBUG : bool value, if Error print or not ( dev ma True and prod ma False)
        ALLOWED_HOSTS =[]: list domain name or ip by default, its localhost
        INSTALLED_APPS =[..]: list of pages
        MIDDLEWARE =[..] pages lai link garaune with security,
            Csrfview : form ko input value validate
        ROOT_URLCONF : always one, define the patterns
        TEMPLATES :
        WSGI_APPLICATION : defines which server to use
        DATABASE : modal
        AUTH_PASSWORD_VALIDATORS : password banauda ko conventions haru


> open pycharm terminal
    make a file .gitignore then type .idea/ , .venv    to ignore in to git track
> git add, vommt garnee
> git remote -v is blank so make a repo in github
then
>git remote add origin repo url
>git push -u origin master



>python manage.py runserver
    then Browser ma "http://127.0.0.1:8000/admin/" > ctrl + C if to quit
>db has no table so > python manage.py migrate
#super user
>python manage.py createsuperuser
